#!/bin/bash

# pre-commit - Git hook to validate dual-context architecture before commits
# This hook runs automatically before each commit to ensure integrity

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MAINTENANCE_DIR="$(cd "$SCRIPT_DIR/../src/sh" && pwd)"

echo "üîç Pre-commit validation: Dual-context architecture integrity"

# Check if any .md files were added or modified
MODIFIED_MD_FILES=$(git diff --cached --name-only --diff-filter=AM | grep '\.md$' || true)

if [ -z "$MODIFIED_MD_FILES" ]; then
    echo "üìù No markdown files modified - skipping validation"
    exit 0
fi

echo "üìä Modified markdown files:"
echo "$MODIFIED_MD_FILES" | while read -r file; do
    echo "   üìÑ $file"
done

# Function to check if file needs dual-context integration
check_dual_context_integration() {
    local file="$1"
    
    # Skip files that are already part of dual-context (symlinks or .entry.md)
    if [ -L "$file" ] || [[ "$file" == *.entry.md ]]; then
        return 0
    fi
    
    # Skip files in pages structure (they are the real files)
    if [[ "$file" == *"2cu.atlassian.net/wiki/spaces/CCU/pages"* ]]; then
        return 0
    fi
    
    # Check if this is a new file that needs integration
    local entry_file="${file}.entry.md"
    
    if [ ! -f "$entry_file" ] && [ ! -L "$file" ]; then
        echo "‚ö†Ô∏è  WARNING: $file appears to be a new markdown file"
        echo "   It may need integration into dual-context architecture"
        echo "   Consider running: maintenance/src/sh/add_new_markdown.sh '$file'"
        return 1
    fi
    
    return 0
}

# Validate dual-context integration for modified files
INTEGRATION_WARNINGS=0

echo "$MODIFIED_MD_FILES" | while read -r file; do
    if [ -n "$file" ] && [ -f "$file" ]; then
        if ! check_dual_context_integration "$file"; then
            INTEGRATION_WARNINGS=$((INTEGRATION_WARNINGS + 1))
        fi
    fi
done

# Check for orphaned backup files (shouldn't be committed)
BACKUP_FILES=$(git diff --cached --name-only | grep -E '\.(backup|migration\.backup|sync\.backup)$' || true)

if [ -n "$BACKUP_FILES" ]; then
    echo ""
    echo "‚ùå Backup files detected in commit:"
    echo "$BACKUP_FILES"
    echo "üí° Remove backup files before committing or run: maintenance/src/sh/cleanup_maintenance.sh"
    exit 1
fi

# Summary
echo ""
echo "‚úÖ Pre-commit validation passed"

if [ "$INTEGRATION_WARNINGS" -gt 0 ]; then
    echo "‚ö†Ô∏è  $INTEGRATION_WARNINGS integration warnings (see above)"
    echo "üí° Consider integrating new files into dual-context architecture"
    echo ""
    echo "ü§î Proceed with commit? (y/N)"
    read -r response
    case "$response" in
        [yY][eE][sS]|[yY])
            echo "‚úÖ Proceeding with commit"
            ;;
        *)
            echo "‚ùå Commit aborted"
            exit 1
            ;;
    esac
fi

echo "üéØ Dual-context architecture integrity maintained"
exit 0